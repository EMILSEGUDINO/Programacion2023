

# Definir clases
from flask import Flask, render_template

app = Flask(__name__)

# Datos cursos
cursos = [
    {
        "titulo": "Curso de Carpintería",
        "descripcion": "Aprende las técnicas básicas de carpintería.",
        "objetivos": "Dominar las herramientas de carpintería y construir muebles.",
        "costo": 5000,
        "duracion_meses": 5,
        "categoria": "Inicial",
        "estado": "NO Disponible",
        "clases": [
            {"fecha": "2023-10-01", "titulo": "Introducción a la carpintería", "contenido": "..."},
            {"fecha": "2023-10-08", "titulo": "Herramientas básicas", "contenido": "...", "url_drive": ""},
       
        "titulo": "Curso Phython",
        "descripcion": "Aprende las técnicas básicas de Phyton.",
        "objetivos": "Comprender Phyton. Generar un entorno en Phyton"
        "duracion_meses": 3,
        "categoria": "Avanzado",
        "estado": "Disponible",
        "clases": [
            {"fecha": "2023-10-01", "titulo": "Introducción a la carpintería", "contenido": "..."},
            {"fecha": "2023-10-08", "titulo": "Herramientas básicas", "contenido": "...", "url_drive": "https://drive.google.com/..."},
    
        "titulo": "Web developed",
        "descripcion": "Dominar tecnicas basicas de Web delovepent",
        "objetivos": "Construir paginas web.",
        "costo": 20000,
        "duracion_meses": 3,
        "categoria": "Intermedio",
        "estado": "Disponible",
        "clases": [
            {"fecha": "2023-10-01", "titulo": "Introducción a la carpintería", "contenido": "..."},
            {"fecha": "2023-10-08", "titulo": "Herramientas básicas", "contenido": "...", "url_drive": ""},
        ]
    },
    
@app.route('/')
def listar_cursos():
    cursos_disponibles = [curso for curso in cursos if curso['estado'] == 'Disponible']
    return render_template('cursos.html', cursos=cursos_disponibles)

if __name__ == '__main__':
    app.run(debug=True)


@app.route('/')
def index():
    cursos = [curso1, curso2]
    usuarios = [usuario1, usuario2]
    return render_template('index.html', cursos=cursos, usuarios=usuarios)

if __name__ == '__main__':
    app.run(debug=True)

import smtplib
from  import 
from  import 

def enviar_correo(destinatario, asunto, mensaje):
    # Configuración del servidor 
    smtp_server = ""
    puerto = 587  # Puerto típico para TLS

    # Información de autenticación
    remitente = ""
    contraseña = ""

    # Crear el objeto del mensaje
    msg = MIMEMultipart()
    msg["From"] = remitente
    msg["To"] = destinatario
    msg["Subject"] = asunto

    # Agregar el mensaje al cuerpo del correo
    msg.attach(MIMEText(mensaje, "plain"))

    # Iniciar una conexión segura al servidor SMTP
    try:
        server = (smtp_server, puerto)
        server.starttls()
        server.login(remitente, contraseña)

        # Enviar el correo electrónico
        server.sendmail(remitente, destinatario, msg.as_string())

        # Cerrar la conexión al servidor 
        server.quit()

        print("Correo electrónico enviado con éxito.")
    except Exception as e:
        print("Error al enviar el correo electrónico:", str(e))


